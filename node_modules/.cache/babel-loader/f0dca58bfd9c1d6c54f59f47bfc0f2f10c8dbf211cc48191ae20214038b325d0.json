{"ast":null,"code":"export const fetchWebsite = async url => {\n  try {\n    // Use a CORS proxy to avoid CORS issues\n    const corsProxy = 'https://api.allorigins.win/raw?url=';\n    const response = await fetch(corsProxy + encodeURIComponent(url));\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const html = await response.text();\n    return html;\n  } catch (error) {\n    console.error('Error fetching the website:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["fetchWebsite","url","corsProxy","response","fetch","encodeURIComponent","ok","Error","status","html","text","error","console"],"sources":["/Users/alikhaki/SEO Analyzer/seo-analyzer-1/src/services/fetchWebsite.ts"],"sourcesContent":["export const fetchWebsite = async (url: string): Promise<string> => {\n    try {\n        // Use a CORS proxy to avoid CORS issues\n        const corsProxy = 'https://api.allorigins.win/raw?url=';\n        const response = await fetch(corsProxy + encodeURIComponent(url));\n        \n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const html = await response.text();\n        return html;\n    } catch (error) {\n        console.error('Error fetching the website:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,GAAW,IAAsB;EAChE,IAAI;IACA;IACA,MAAMC,SAAS,GAAG,qCAAqC;IACvD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,SAAS,GAAGG,kBAAkB,CAACJ,GAAG,CAAC,CAAC;IAEjE,IAAI,CAACE,QAAQ,CAACG,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACK,MAAM,EAAE,CAAC;IAC7D;IACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}